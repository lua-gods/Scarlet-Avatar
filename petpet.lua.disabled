local delay = 3
local lastPet = -1
local scale = 0.75
local key = keybind:create("Patpat", "key.mouse.2", false)

local BLOCK_FIX = vec(0.5, 0, 0.5)
local BLOCK_BB = vec(0.7, 0.7, 0.7)

local function pat(pos, box)
  -- pos
  local box2 = box / 2

  box:applyFunc(function(val) return val * math.random() end)
  pos = pos + box.xyz - box2.x_z

  -- ping
  host:swingArm()
  pings["fran.patpat.pat"](pos, scale)
  scale = scale * 1.01
  return true
end

local function patBlock()
  -- get block
  local block = player:getTargetedBlock()
  if (block.id == "minecraft:player_head" or block.id == "minecraft:player_wall_head") then
    -- pat
    return pat(block:getPos() + BLOCK_FIX, BLOCK_BB:copy())
  else
    -- no pats :(
    return false
  end
end

local function patCheck()
  -- get crosshair entity
  local entity = player:getTargetedEntity()
  if (entity ~= nil) then
    -- pat
    return pat(entity:getPos(), entity:getBoundingBox())
  else
    -- try pat heads
    return patBlock()
  end
end

function key.onPress()
  -- only allow for pets when sneaking with empty hands
  if (player:isSneaking() and player:getItem(1).id == "minecraft:air" and player:getItem(2).id == "minecraft:air" and patCheck()) then
    lastPet = world.getTime() + delay - 1
    return true
  end
end
function key.onRelease()
  -- disallow pats
  lastPet = -1
  scale = 1
end

function events.tick()
  -- button holding = infinite pats ^^
  if (lastPet > -1 and (lastPet - world.getTime()) % delay == 0) then
    patCheck()
  end
end

pings["fran.patpat.pat"] = function(pos, scale)
  particles.heart:pos(pos):scale(scale):spawn()
end